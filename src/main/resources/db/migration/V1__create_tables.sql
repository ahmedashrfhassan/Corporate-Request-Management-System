-- Create a sequence for user table primary key
CREATE SEQUENCE USER_SEQ
    START WITH 1
    INCREMENT BY 1
    NO CACHE;

-- Create a sequence for user table primary key
CREATE SEQUENCE ATTACHMENT_SEQ
    START WITH 1
    INCREMENT BY 1
    NO CACHE;

-- Create a sequence for user table primary key
CREATE SEQUENCE REQUEST_SEQ
    START WITH 1
    INCREMENT BY 1
    NO CACHE;

CREATE TABLE IF NOT EXISTS USERS (
    ID BIGINT DEFAULT NEXT VALUE FOR USER_SEQ PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CIVIL_ID VARCHAR(50) NOT NULL UNIQUE,
    EXPIRY_DATE DATE NOT NULL,
    IS_DELETED BOOLEAN NOT NULL DEFAULT FALSE

);

-- Create Request Statuses Table
CREATE TABLE  IF NOT EXISTS STATUSES (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ATTACHMENT_TYPES (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(255)
);

-- Create Corporate Requests Table
CREATE TABLE  IF NOT EXISTS REQUESTS (
    ID BIGINT DEFAULT NEXT VALUE FOR REQUEST_SEQ PRIMARY KEY,
    REQUEST_NAME VARCHAR(255) NOT NULL,
    STATUS_ID BIGINT NOT NULL,
    OWNER_ID BIGINT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (STATUS_ID) REFERENCES STATUSES(ID),
    FOREIGN KEY (OWNER_ID) REFERENCES USERS(ID)
);

-- Create Attachments Table
CREATE TABLE  IF NOT EXISTS ATTACHMENTS (
    ID BIGINT DEFAULT NEXT VALUE FOR ATTACHMENT_SEQ PRIMARY KEY,
    FILE_NAME VARCHAR(255) NOT NULL,
    FILE_TYPE VARCHAR(100),
    ATTACHMENT_TYPE BIGINT NOT NULL,
    REQUEST_ID BIGINT,
    UPLOAD_DATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_ATTACHMENT_TYPE FOREIGN KEY (ATTACHMENT_TYPE) REFERENCES ATTACHMENT_TYPES (ID),
    CONSTRAINT FK_REQUEST_ID FOREIGN KEY (REQUEST_ID) REFERENCES REQUESTS (ID)
);

-- Create Request-Attachment Relationship Table
CREATE TABLE  IF NOT EXISTS REQUEST_ATTACHMENTS (
    REQUEST_ID BIGINT NOT NULL,
    ATTACHMENT_ID BIGINT NOT NULL,
    PRIMARY KEY (REQUEST_ID, ATTACHMENT_ID),
    FOREIGN KEY (REQUEST_ID) REFERENCES REQUESTS(ID) ON DELETE CASCADE,
    FOREIGN KEY (ATTACHMENT_ID) REFERENCES ATTACHMENTS(ID)
);


--todo indexes